USE ATHLANTIC;

/*
GRUPO:
	AMANDA MOREIRA
    GUILHERME Y. F. SILVA
    JOÃO P. L. CAMPOS
    JOÃO V. R. MACIEL
    LUIS F. ZUCATO FILHO
    MARCO A. B. FERREIRA
    MATEUS H. R. CUSTODIO
*/

/*
01) Selecione as denúncias realizadas este ano. Liste o nome do usuário, e-mail, instituição, 
	motivo da denúncia, descrição e data. Ordene das mais recentes para as mais antigas.
*/

SELECT
    DENUNCIAS.DNC_DATA, 
    DENUNCIAS.DNC_MOTIVO, 
    DENUNCIAS.DNC_DESCRICAO,
    USUARIOS.USU_EMAIL, 
    USUARIOS.USU_NOME, 
    USUARIOS.USU_INSTITUICAO_ENSINO
FROM DENUNCIAS
INNER JOIN USUARIOS ON DENUNCIAS.FK_USUARIOS_USU_ID = USUARIOS.USU_ID
WHERE YEAR(DENUNCIAS.DNC_DATA) = 2023
ORDER BY DENUNCIAS.DNC_DATA DESC;

/*
02) Selecione os comentários dos usuários. Liste nome do usuário, e-mail, instituição, tipo de postagem, 
	descrição, quantidade de curtidas. Ordene por usuário, comentários mais curtidos e descrição.
*/

SELECT USU_NOME, USU_EMAIL, USU_INSTITUICAO_ENSINO, PST_DESCRICAO, USU_DESCRICAO, PST_CURTIDAS
FROM USUARIOS
INNER JOIN POSTAGENS_GERAL ON POSTAGENS_GERAL.FK_USUARIOS_USU_ID = USUARIOS.USU_ID
ORDER BY USU_NOME, PST_CURTIDAS DESC, PST_DESCRICAO;

/*
03) Selecione as notificações enviadas aos usuários. Liste nome do usuário, e-mail, instituição, 
	título e descrição. Ordene por usuário e título da notificação.
*/

SELECT 
	USU_NOME AS "Nome", 
    USU_EMAIL AS "E-mail", 
    USU_INSTITUICAO_ENSINO AS "Instituição", 
    NOT_TITULO AS "Título", 
    NOT_DESCRICAO AS "Descrição" 
FROM USUARIOS 
INNER JOIN NOTIFICACOES ON FK_USUARIOS_USU_ID = USU_ID 
ORDER BY USU_NOME, NOT_TITULO;

/*
04) Selecione os produtos comprados pelos usuários. Liste nome do usuário, e-mail, nome da atlética, 
	instituição, data da compra, valor da compra, quantidade de itens e a descrição do produto comprado. 
    Ordene pelo usuário e compras mais recentes.
*/

SELECT
    USU_NOME AS USUARIO,
    USU_EMAIL AS EMAIL,
    ATL_NOME AS ATLETICA,
    USU_INSTITUICAO_ENSINO AS INSTITUICAO,
    CMP_DATA AS DATA_COMPRA,
    PAG_VALOR_PAGO AS VALOR_PAGO,
    ITS_QUANTIDADE AS QUANTIDADE,
    PRO_DESCRICAO AS DESCRIÇÃO
FROM USUARIOS
INNER JOIN ATLETICAS ON USUARIOS.FK_ATLETICAS_ATL_ID = ATLETICAS.ATL_ID
INNER JOIN COMPRAS ON COMPRAS.FK_USUARIOS_USU_ID = USUARIOS.USU_ID
INNER JOIN PAGAMENTOS ON PAGAMENTOS.FK_USUARIOS_USU_ID = USUARIOS.USU_ID
INNER JOIN ITEMS_COMPRAS ON ITEMS_COMPRAS.FK_COMPRAS_CMP_ID = COMPRAS.CMP_ID
INNER JOIN PRODUTOS ON ITEMS_COMPRAS.FK_COMPRAS_CMP_ID = COMPRAS.CMP_ID
ORDER BY USU_NOME, CMP_DATA DESC;

/*
05) Selecione os ingressos de eventos sociais comprados pelos usuários. 
	Liste nome do usuário, e-mail, nome da atlética, instituição, data da compra, valor da compra, 
    a quantidade e o nome do evento social. Ordene pelo usuário e compras mais recentes.
*/

SELECT 
	ING_NUMEROINGRESSO, 
    USU_NOME, 
    USU_EMAIL, 
    ATL_NOME,
    ATL_INSTITUICAO_ENSINO,
    CPI_DATA_COMPRA, 
    (LOI_VALOR * ING_NUMEROINGRESSO) AS 'VALOR_COMPRA',
	LOI_QUANTIDADE_DISPONIVEL, 
    EVE_NOME
FROM INGRESSOS
INNER JOIN EVENTOS_SOCIAIS ON EVENTOS_SOCIAIS.EVS_ID = INGRESSOS.FK_EVENTOS_SOCIAIS_EVS_ID
INNER JOIN LOTES_INGRESSOS ON LOTES_INGRESSOS.FK_INGRESSOS_ING_ID = INGRESSOS.ING_ID
INNER JOIN COMPRAS_INGRESSOS ON COMPRAS_INGRESSOS.FK_LOTES_INGRESSOS_LOI_ID = LOTES_INGRESSOS.LOI_ID
INNER JOIN USUARIOS ON USUARIOS.USU_ID = COMPRAS_INGRESSOS.FK_USUARIOS_USU_ID
INNER JOIN ATLETICAS ON ATLETICAS.ATL_ID = USUARIOS.FK_ATLETICAS_ATL_ID
ORDER BY USU_NOME, CPI_DATA_COMPRA DESC;

/*
06) Selecione os ingressos de eventos esportivos comprados pelos usuários. 
	Liste nome do usuário, e-mail, nome da atlética, instituição, data da compra, valor da compra, 
    a quantidade e o nome do evento social. Ordene pelo usuário e compras mais recentes.
*/

SELECT 
	U.USU_NOME AS 'NOME USUÁRIO',
    U.USU_EMAIL AS 'E-MAIL USUÁRIO',
    A.ATL_NOME AS 'ATLÉTICA',
    U.USU_INSTITUICAO_ENSINO AS 'INSTITUIÇÃO DE ENSINO',
    CI.CPI_DATA_COMPRA AS 'DATA COMPRA',
    LI.LOI_VALOR AS 'VALOR COMPRA',
    LI.LOI_QUANTIDADE_DISPONIVEL AS 'QUANTIDADE DISPONÍVEL',
    EE.EVE_NOME AS 'NOME EVENTO'
FROM EVENTOS_ESPORTIVOS EE
INNER JOIN INGRESSOS I ON I.FK_EVENTOS_ESPORTIVOS_EVE_ID = EE.EVE_ID
INNER JOIN LOTES_INGRESSOS LI ON LI.FK_INGRESSOS_ING_ID = I.ING_ID
INNER JOIN COMPRAS_INGRESSOS CI ON CI.FK_LOTES_INGRESSOS_LOI_ID = LI.LOI_ID
INNER JOIN USUARIOS U ON CI.FK_USUARIOS_USU_ID = U.USU_ID
INNER JOIN ATLETICAS A ON A.ATL_ID = EE.FK_ATLETICAS_ATL_ID
ORDER BY U.USU_NOME, CI.CPI_DATA_COMPRA DESC;

/*
07) Selecione nome da atlética, usuário e o valor total de pagamentos realizados por ano. 
	Ordene por atlética, usuário e ano de pagamento.
*/

SELECT 
	ATL_NOME AS "Atlética", 
    USU_NOME AS 'Usúario', 
    SUM(DEP_VALOR) AS 'Pagamento anual',
    YEAR(DEP_DATA) AS 'Ano Pagamento'
FROM ATLETICAS 
INNER JOIN USUARIOS ON ATL_ID = USUARIOS.FK_ATLETICAS_ATL_ID 
INNER JOIN DESPESAS ON DESPESAS.FK_ATLETICAS_ATL_ID = ATL_ID 
GROUP BY ATL_NOME, USU_NOME, YEAR(DEP_DATA)
ORDER BY ATL_NOME, USU_NOME, YEAR(DEP_DATA);

/*
08) Selecione os usuários, seus cargos e funcionalidades. Ordene por cargos e usuários.
*/

SELECT 
	U.USU_NOME AS 'USUÁRIO',
    C.CAR_NOME AS 'CARGO',
    F.FUN_NOME AS 'FUNCIONALIDADE'
FROM USUARIOS U
INNER JOIN USUARIOS_CARGOS UC ON UC.FK_USUARIOS_USU_ID = U.USU_ID
INNER JOIN CARGOS C ON C.CAR_ID = UC.FK_CARGOS_CAR_ID
INNER JOIN CARGOS_FUNCIONALIDADES CF ON CF.FK_CARGOS_CAR_ID = C.CAR_ID
INNER JOIN FUNCIONALIDADES F ON F.FUN_ID = CF.FK_FUNCIONALIDADES_FUN_ID
ORDER BY C.CAR_NOME, U.USU_NOME;

/*
09) Selecione as estatísticas dos atletas em cada jogo e modalidade que participou. 
	Liste nome do usuário, e-mail, instituição, tipo de esporte, modalidade, gênero, data do jogo, 
    resultado e dados estatísticos. Ordene pelo usuário e jogos mais recentes.
*/

SELECT 
	USUARIOS.USU_NOME, 
    USUARIOS.USU_EMAIL, 
    USUARIOS.USU_INSTITUICAO_ENSINO, 
    USUARIOS.USU_INSTITUICAO_ENSINO, 
    MODALIDADES_ESPORTIVAS.MDE_TIPO_DE_ESPORTE, 
    MODALIDADES_ESPORTIVAS.MDE_NOME, 
    MODALIDADES_ESPORTIVAS.MDE_GENERO, 
    JOGOS.JOG_DIA, 
    JOGOS.JOG_EQPB_RESULTADO_FINAL, 
    JOGOS.JOG_EQPA_RESULTADO_FINAL, 
    ESTATISTICAS_JOGO_ATLETA.EJA_TIPO_ESTATISTICAS, 
    ESTATISTICAS_JOGO_ATLETA.EJA_TEMPO_QUARTO_SET, 
    ESTATISTICAS_JOGO_ATLETA.EJA_TEMPO_NO_JOGO, 
    ESTATISTICAS_JOGO_ATLETA.EJA_VALOR 
FROM ESTATISTICAS_JOGO_ATLETA 
INNER JOIN USUARIOS ON ESTATISTICAS_JOGO_ATLETA.FK_USUARIOS_USU_ID = USUARIOS.USU_ID 
INNER JOIN JOGOS ON JOGOS.JOG_ID = ESTATISTICAS_JOGO_ATLETA.FK_JOGOS_JOG_ID 
INNER JOIN CAMPEONATOS_MODALIDADES ON CAMPEONATOS_MODALIDADES.CMM_ID = JOGOS.FK_CAMPEONATOS_MODALIDADES_CMM_ID 
INNER JOIN MODALIDADES_ESPORTIVAS ON MODALIDADES_ESPORTIVAS.MDE_ID = CAMPEONATOS_MODALIDADES.FK_MODALIDADES_ESPORTIVAS_MDE_ID
ORDER BY USUARIOS.USU_NOME, JOGOS.JOG_DIA DESC;

/*
10) Selecione as equipes participantes dos jogos e suas respectivas modalidades esportivas. 
	Liste nome do usuário, e-mail, instituição, nome da atlética, tipo de esporte e modalidade.
	Ordene por atlética, modalidade e participante
*/

SELECT 
	U.USU_NOME AS 'NOME USUÁRIO',
    U.USU_EMAIL AS 'E-MAIL USUÁRIO',
    U.USU_INSTITUICAO_ENSINO AS 'INSTITUIÇÃO DE ENSINO',
    A.ATL_NOME AS 'ATLÉTICA',
    ME.MDE_TIPO_DE_ESPORTE AS 'TIPO ESPORTE',
    ME.MDE_NOME AS 'MODALIDADE'
FROM EQUIPES_JOGOS EJ
INNER JOIN EQUIPES E ON E.EQP_ID = EJ.FK_EQUIPES_EQP_ID
INNER JOIN USUARIOS U ON U.FK_EQUIPES_EQP_ID = E.EQP_ID
INNER JOIN ATLETICAS A ON A.ATL_ID = E.FK_ATLETICAS_ATL_ID
INNER JOIN MODALIDADES_ESPORTIVAS ME ON ME.MDE_ID = E.FK_MODALIDADES_ESPORTIVAS_MDE_ID 
ORDER BY A.ATL_NOME, ME.MDE_NOME, U.USU_NOME;

/*
11) Selecione os eventos esportivos e suas postagens. 
	Liste o nome do evento, atlética, data, a descrição do post, a data do post, a quantidade de curtidas 
    e o nome do usuário que fez o comentário. Ordene pela atlética, evento e data.
*/

SELECT 
	EE.EVE_NOME AS 'NOME EVENTO',
    A.ATL_NOME AS 'ATLÉTICA',
    EE.EVE_DATAEVENTO AS 'DATA EVENTO',
    PG.PST_DESCRICAO AS 'DESCRIÇÃO POST',
    PG.PST_DATA AS 'DATA POST',
    PG.PST_CURTIDAS AS 'QUANTIDADE CURTIDAS',
    U.USU_NOME AS 'NOME USUÁRIO DO POST'
FROM EVENTOS_ESPORTIVOS EE
INNER JOIN POSTAGENS_EVENTOS PE ON PE.FK_EVENTOS_ESPORTIVOS_EVE_ID = EE.EVE_ID
INNER JOIN ATLETICAS A ON A.ATL_ID = EE.FK_ATLETICAS_ATL_ID
INNER JOIN POSTAGENS_GERAL PG ON PG.PST_ID = PE.FK_POSTAGENS_GERAL_PST_ID
INNER JOIN USUARIOS U ON U.USU_ID = PG.FK_USUARIOS_USU_ID
ORDER BY A.ATL_NOME, EE.EVE_NOME, EE.EVE_DATAEVENTO;
